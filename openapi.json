{
  "openapi": "3.0.3",
  "info": {
    "version": "1.1.1",
    "title": "OTData API",
    "description": "The software-independent standard interface for the transmission of telematics data.\n- The authentication is specified by the interface operator\n- It is recommended to use OAuth 2.0",
    "contact": {
      "name": "OpenTelematics e.V.",
      "email": "info@opentelematics.io"
    }
  },
  "externalDocs": {
    "description": "Additional Documentation",
    "url": "https://opentelematics.gitlab.io/otdata/docs/"
  },
  "servers": [
    {
      "url": "{protocol}://api.{hostname}/{version}",
      "variables": {
        "hostname": {
          "description": "Self-hosted Enterprise Server or Enterprise Cloud hostname",
          "default": "opentelematics"
        },
        "protocol": {
          "enum": ["https"],
          "default": "https"
        }, 
        "version": {
          "enum": ["1.1.1"],
          "default": "1.1.1"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "Live Data", 
      "description": ""
    },
    {
      "name": "Tacho", 
      "description": ""
    },
    {
      "name": "Devices", 
      "description": ""
    },
    {
      "name": "Messages", 
      "description": ""
    },
    {
      "name": "Logs", 
      "description": ""
    },
    {
      "name": "Tour Management", 
      "description": "Endpoints to manage tours, drives and shipments "
    }    
  ],
  "paths": {
    "/otdata/history": {
      "get": {
        "tags": [
          "Live Data"
        ],
        "summary": "Returns a list of data that matches the specified time interval and ID",
        "description": "If no ID is specified, data is returned for all vehicles.\nIf `from` and `to` do not exist, the complete history is returned.",
        "parameters": [
          {
            "$ref": "#/components/parameters/didParam"
          },
          {
            "$ref": "#/components/parameters/cidParam"
          },
          {
            "$ref": "#/components/parameters/gidParam"
          },
          {
            "$ref": "#/components/parameters/fromParam"
          },
          {
            "$ref": "#/components/parameters/toParam"
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OTResponseMeta"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OTData"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/otdata/getlive": {
      "get": {
        "tags": [
          "Live Data"
        ],
        "summary": "Returns a list of the current data of all vehicles or vehicles that\nmatch the specified ID ",
        "description": "If no ID is specified, data is returned for all vehicles.",
        "parameters": [
          {
            "$ref": "#/components/parameters/didParam"
          },
          {
            "$ref": "#/components/parameters/cidParam"
          },
          {
            "$ref": "#/components/parameters/gidParam"
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OTResponseMeta"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OTData"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/otdata/tacho": {
      "get": {
        "tags": [
          "Tacho"
        ],
        "summary": "Returns a list of all matching DDD files of the specified customer",
        "description": "If no `did` or `gid` is specified, data is returned for all devices.\nIf `from` and `to` do not exist, all DDD files are returned.\nIf `timeused` is set to `activity`, all DDD files needed to cover the given time intervall are returned.",
        "parameters": [
          {
            "$ref": "#/components/parameters/cidParamRequired"
          },
          {
            "name": "class",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "driver",
                "vehicle",
                "all"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/didParam"
          },
          {
            "$ref": "#/components/parameters/gidParam"
          },
          {
            "$ref": "#/components/parameters/fromParam"
          },
          {
            "$ref": "#/components/parameters/toParam"
          },
          {
            "name": "timeused",
            "in": "query",
            "description": "Indicates to which time tags `from` and `to` refer:\n`\"activity\"` refers to the time the activities were stored in the DDD Files\n`\"download\"` refers to the download time of the DDD file\n`\"data\"` refers to the time stemp of the DDD files",
            "schema": {
              "type": "string",
              "enum": [
                "activity",
                "download",
                "data"
              ],
              "default": "activity"
            }
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OTResponseMeta"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OTTransferContainer"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Tacho"
        ],
        "summary": "Transmits a list of DDD files",
        "parameters": [
          {
            "$ref": "#/components/parameters/cidParamRequired"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OTTransferContainer"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/otdevice/getall": {
      "get": {
        "tags": [
          "Devices"
        ],
        "summary": "Returns a list of all registered devices of the specified customer",
        "parameters": [
          {
            "$ref": "#/components/parameters/cidParamRequired"
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OTResponseMeta"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OTDevice"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/otdata/setcallback": {
      "post": {
        "tags": [
          "Callback URL"
        ],
        "summary": "Sets callback URL for data receiving",
        "parameters": [
          {
            "name": "index",
            "in": "query",
            "description": "Index to identify the callback",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "URL like https://dummy.de",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "Specifies the type of data to which the callback URL belongs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "liveData",
                  "orderState",
                  "messages",
                  "all"
                ]
              }
            }
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/otmessage/message": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Sends a message",
        "parameters": [
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OTMessageBase"
              }
            }
          },
          "description": "Since there can be only one body parameter, it contains all data that\nis transferred in the body and thus also the token. The parameter name\nis for documentation purposes only.",
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "get": {
        "tags": [
          "Messages"
        ],
        "summary": "Returns a list of messages of a specific vehicle",
        "parameters": [
          {
            "$ref": "#/components/parameters/refidParam"
          },
          {
            "$ref": "#/components/parameters/refdidParam"
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OTResponseMeta"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OTMessage"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/otdata/log": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Returns a list of logs that matches the specified time intervall",
        "description": "If `from` and `to` do not exist, all logs are returned.\nAll logs up to `loglevel` are returned.",
        "parameters": [
          {
            "name": "loglevel",
            "in": "query",
            "description": "From 0 (most important) to 7 (least important):\n0=Emergency, 1=Alert, 2=Critical, 3=Error, 4=Warning, 5=Notice, 6=Informational, 7=Debug",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "maximum": 7
            }
          },
          {
            "$ref": "#/components/parameters/fromParam"
          },
          {
            "$ref": "#/components/parameters/toParam"
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OTResponseMeta"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OTLog"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/otstatus/setMessageStatus": {
      "post": {
        "tags": [
          "Messages"
        ],
        "summary": "Sets status for a specific message",
        "parameters": [
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OTSetStatus"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/tours": {
      "get": {
        "summary": "Returns a list of tours",
        "tags": [
          "Tour Management"
        ],
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/fromParam"
          },
          {
            "$ref": "#/components/parameters/toParam"
          },
          {
            "$ref": "#/components/parameters/cidParam"
          },
          {
            "$ref": "#/components/parameters/didParam"
          },
          {
            "$ref": "#/components/parameters/vidParam"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/embed"
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OTResponseMeta"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OTTour"
                            
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "tags": [
          "Tour Management"
        ],
        "summary": "Adds a new tour.",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OTTour"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/tours/{tour-id}": {
      "get": {
        "tags": [
          "Tour Management"
        ],
        "summary": "Gets a tour if it has a different entity tag",
        "parameters": [
          {
            "in": "path",
            "name": "tour-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "Newest known entity tag of the ressource",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "ETag": {
                "description": "Entity Tag",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OTResponseMeta"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OTTour"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "304": {
            "$ref": "#/components/responses/NotModified"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "tags": [
          "Tour Management"
        ],
        "summary": "Updates or adds a tour under a certain URI if the entity tag in the\n`If-Match` header matches the current entity tag on the server.",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "tour-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "Newest known entity tag of the ressource",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OTTour"
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Tour Management"
        ],
        "summary": "Deletes a specified tour on a specified device",
        "parameters": [
          {
            "in": "path",
            "name": "tour-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/drives/{drive-id}": {
      "post": {
        "tags": [
          "Tour Management"
        ],
        "summary": "Adds a new drive.",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OTDrive"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Tour Management"
        ],
        "summary": "Deletes a specified drive",
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/shipments/{shipment-id}": {
      "post": {
        "tags": [
          "Tour Management"
        ],
        "summary": "Adds a new shipment.",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "shipment-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OTShipment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "tags": [
          "Tour Management"
        ],
        "summary": "Deletes a specified shipment",
        "parameters": [
          {
            "in": "path",
            "name": "shipment-id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/otdata/tacho/vehicle": {
      "get": {
        "tags": [
          "Tacho"
        ],
        "summary": "Returns a list of all registered vehicles of the specified customer",
        "parameters": [
          {
            "$ref": "#/components/parameters/cidParamRequired"
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OTResponseMeta"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OTDevice"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/otdata/tacho/driver": {
      "get": {
        "tags": [
          "Tacho"
        ],
        "summary": "Returns a list of all registered drivers of the specified customer",
        "parameters": [
          {
            "$ref": "#/components/parameters/cidParamRequired"
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OTResponseMeta"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OTDriverCard"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/otdevice/events": {
      "get": {
        "tags": [
          "Tour Management"
        ],
        "summary": "Returns a list of all or a maximum number of events that are in queue",
        "parameters": [
          {
            "in": "query",
            "name": "maximum",
            "description": "Maximum number of events to be returned",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OTResponseMeta"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "tourevents": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OTTourEvent"
                              }
                            },
                            "driveevents": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OTDriveEvent"
                              }
                            },
                            "taskevents": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/OTTaskEvent"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/otdevice/events/tour": {
      "post": {
        "tags": [
          "Tour Management"
        ],
        "summary": "Pushes a tour event",
        "parameters": [
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OTTourEvent"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/otdevice/events/drive": {
      "post": {
        "tags": [
          "Tour Management"
        ],
        "summary": "Pushes a drive event",
        "parameters": [
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OTDriveEvent"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/otdevice/events/task": {
      "post": {
        "tags": [
          "Tour Management"
        ],
        "summary": "Pushes a task event",
        "parameters": [
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OTTaskEvent"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/otdevice/events/ack": {
      "post": {
        "tags": [
          "Tour Management"
        ],
        "summary": "Pushes an acknowledgment for a list of events",
        "parameters": [
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OTIDType"
                }
              }
            }
          },
          "description": "List of Event IDs to be acknowledged",
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/otdevice/eta": {
      "post": {
        "tags": [
          "Tour Management"
        ],
        "summary": "Pushes a list of ETAs",
        "parameters": [
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/otidParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OTEta"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "$ref": "#/components/responses/NoContent"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "get": {
        "tags": [
          "Tour Management"
        ],
        "summary": "Returns list of ETAs for either a certain drive or tour",
        "parameters": [
          {
            "in": "query",
            "name": "driveid",
            "description": "Drive ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "tourid",
            "description": "Tour ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "maximum",
            "description": "Maximum number of ETAs to be returned",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "$ref": "#/components/parameters/tokenParam"
          },
          {
            "$ref": "#/components/parameters/versionParam"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OTResponseMeta"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/OTEta"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "tokenParam": {
        "name": "x-access-token",
        "in": "header",
        "description": "JSON Web Token",
        "schema": {
          "type": "string"
        }
      },
      "versionParam": {
        "in": "query",
        "name": "version",
        "description": "Version of the OpenTelematics API used, e.g.:`\"1.1.0\"`",
        "schema": {
          "type": "string",
          "pattern": "^[1-9][0-9]*\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)$"
        }
      },
      "fromParam": {
        "name": "from",
        "in": "query",
        "description": "Only data from this point on are returned",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "toParam": {
        "name": "to",
        "in": "query",
        "description": "Only data up to this point in time are returned",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "otidParam": {
        "in": "query",
        "name": "otid",
        "required": true,
        "description": "Registered OpenTelematics ID of the requester",
        "schema": {
          "type": "string"
        }
      },
      "cidParam": {
        "name": "cid",
        "in": "query",
        "description": "Customer ID",
        "schema": {
          "type": "string"
        }
      },
      "cidParamRequired": {
        "name": "cid",
        "in": "query",
        "description": "Customer ID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "gidParam": {
        "name": "gid",
        "in": "query",
        "description": "Vehicle Group ID",
        "schema": {
          "type": "string"
        }
      },
      "didParam": {
        "name": "did",
        "in": "query",
        "description": "Device ID",
        "schema": {
          "type": "string"
        }
      },
      "vidParam": {
        "name": "vid",
        "in": "query",
        "description": "Vehicle ID",
        "schema": {
          "type": "string"
        }
      },
      "didParamRequired": {
        "name": "did",
        "in": "query",
        "description": "Device ID",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "refdidParam": {
        "name": "refdid",
        "in": "query",
        "description": "Reference Device ID",
        "schema": {
          "type": "string"
        }
      },
      "refidParam": {
        "name": "refid",
        "in": "query",
        "description": "Reference ID",
        "schema": {
          "type": "string"
        }
      },
      "cursor": {
        "name": "cursor",
        "in": "query",
        "required": false,
        "description": "Cursor for cursor based pagination",
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "required": false,
        "description": "The limit parameter sets a maximum number of results to return per call.",
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 30
        }
      },
      "embed": {
        "name": "embed",
        "in": "query",
        "required": false,
        "description": "Whether the data of the returned resources should be embedded or whether\nonly a link should be returned",
        "schema": {
          "type": "boolean",
          "default": false
        }
      },
      "ifNoneMatch": {
        "in": "header",
        "name": "If-None-Match",
        "description": "Newest known entity tag of the ressource",
        "schema": {
          "type": "string"
        }
      },
      "ifMatch": {
        "in": "header",
        "name": "If-Match",
        "description": "Newest known entity tag of the ressource",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "NoContent": {
        "description": "No Content. The server has successfully fulfilled the request and there\nis no additional content to return in the response payload body"
      },
      "NotModified": {
        "description": "Not Modified. The resource has not been modified since the version\nspecified by the request header If-None-Match."
      },
      "BadRequest": {
        "description": "Bad Request. The server cannot or will not process the request, due to a\nclient error.",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OTResponseMeta"
                },
                {
                  "$ref": "#/components/schemas/OTError"
                }
              ]
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized. The request requires user authentication.",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OTResponseMeta"
                },
                {
                  "$ref": "#/components/schemas/OTError"
                }
              ]
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden. The server understood the request, but refuses to authorize\nit.",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OTResponseMeta"
                },
                {
                  "$ref": "#/components/schemas/OTError"
                }
              ]
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found. The server has not found anything matching the effective\nrequest URI.",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OTResponseMeta"
                },
                {
                  "$ref": "#/components/schemas/OTError"
                }
              ]
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error. The server encountered an unexpected condition\nwhich prevented it from fulfilling the request.",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/OTResponseMeta"
                },
                {
                  "$ref": "#/components/schemas/OTError"
                }
              ]
            }
          }
        }
      }
    },
    "requestBodies": {
      "OTTour": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OTTour"
            }
          }
        },
        "required": true
      }
    },
    "schemas": {
      "OTResponseMeta": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "pattern": "^[1-9][0-9]*\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)$",
            "description": "Version of the OpenTelematics API used, e.g.:`\"1.1.0\"`"
          },
          "otid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ],
            "description": "Registered OpenTelematics ID of the responder"
          },
          "message": {
            "type": "string",
            "description": "Further explanation"
          }
        },
        "required": [
          "otid"
        ]
      },
      "OTError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Custom error code"
          }
        }
      },
      "OTDevice": {
        "type": "object",
        "properties": {
          "did": {
            "allOf": [
              {
                "$ref": "#/components/schemas/did"
              }
            ]
          },
          "refid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refid"
              }
            ]
          },
          "gid": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/gid"
                }
              ]
            },
            "description": "List of assigned vehicle groups"
          },
          "name": {
            "type": "string",
            "maxLength": 150,
            "description": "Name of vehicle",
            "example": "MH-MH 1"
          },
          "plate_number": {
            "type": "string",
            "maxLength": 150,
            "description": "Plate number of vehicle",
            "example": "MH-MH 1"
          },
          "manufacturer": {
            "type": "string",
            "maxLength": 150,
            "description": "Manufacturer",
            "example": "Mercedes-Benz"
          },
          "model": {
            "type": "string",
            "maxLength": 150,
            "description": "Model type",
            "example": "1844 LS"
          },
          "constructionyear": {
            "type": "integer",
            "format": "int32",
            "description": "Building Year",
            "example": 2008
          },
          "vin": {
            "type": "string",
            "minLength": 17,
            "maxLength": 17,
            "pattern": "^[A-HJ-NPR-Z0-9]{13}[0-9]{4}$",
            "description": "Vehicle identification number",
            "example": "WDB9340321L333168"
          },
          "imei": {
            "type": "string",
            "minLength": 15,
            "maxLength": 15,
            "description": "IMEI",
            "example": ""
          },
          "sn": {
            "type": "string",
            "maxLength": 30,
            "description": "Serial number",
            "example": ""
          }
        }
      },
      "OTData": {
        "type": "object",
        "properties": {
          "dataid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/dataid"
              }
            ]
          },
          "cid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cid"
              }
            ]
          },
          "reason": {
            "$ref": "#/components/schemas/OTReason"
          },
          "receivetime": {
            "type": "string",
            "format": "date-time",
            "description": "Date Time of message receive (optional)\n",
            "example": "2017-07-21T17:32:28.000Z"
          },
          "did": {
            "allOf": [
              {
                "$ref": "#/components/schemas/did"
              }
            ]
          },
          "devicetime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          },
          "io": {
            "$ref": "#/components/schemas/OTIOState"
          },
          "position": {
            "$ref": "#/components/schemas/OTPosition"
          },
          "driver": {
            "$ref": "#/components/schemas/OTDriver"
          },
          "codriver": {
            "$ref": "#/components/schemas/OTCoDriver"
          },
          "passengers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OTPassenger"
            }
          },
          "temperature": {
            "$ref": "#/components/schemas/OTTemp"
          },
          "address": {
            "$ref": "#/components/schemas/OTAddress"
          },
          "can": {
            "$ref": "#/components/schemas/OTCanData"
          },
          "tachograph": {
            "$ref": "#/components/schemas/OTTacho"
          },
          "dtc": {
            "$ref": "#/components/schemas/OTDiag"
          },
          "driverbehavior": {
            "$ref": "#/components/schemas/OTDriverbehavior"
          }
        },
        "required": [
          "position",
          "devicetime",
          "did"
        ]
      },
      "OTReason": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Reason number for the message"
          },
          "name": {
            "type": "string",
            "maxLength": 30,
            "description": "Reason for the message"
          }
        }
      },
      "OTIOState": {
        "type": "object",
        "properties": {
          "ignition": {
            "type": "boolean",
            "description": "State of ignition"
          },
          "battery": {
            "type": "boolean",
            "description": "State of external battery input"
          },
          "input": {
            "example": [
              1,
              2,
              "..."
            ],
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Input states (input1, input2, …)"
          },
          "output": {
            "example": [
              1,
              2,
              "..."
            ],
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Output states (input1, input2, …)"
          },
          "analog": {
            "example": [
              1.1,
              2.2,
              "..."
            ],
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "description": "Analog values"
          },
          "voltage": {
            "type": "number",
            "format": "float",
            "description": "Battery input voltage"
          },
          "backupbattery": {
            "type": "number",
            "format": "float",
            "description": "Backup battery input voltage"
          }
        }
      },
      "OTPosition": {
        "properties": {
          "datetime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-21T17:32:28.000Z"
          },
          "coordinates": {
            "$ref": "#/components/schemas/OTCoordinates"
          },
          "heading": {
            "type": "integer",
            "format": "int32",
            "description": "Direction in degrees (0-360)"
          },
          "speed": {
            "type": "number",
            "format": "float",
            "description": "Speed in km/h"
          },
          "altitude": {
            "type": "integer",
            "format": "int32",
            "description": "Altitude in m"
          },
          "accuracy": {
            "type": "integer",
            "format": "int32",
            "description": "Accuracy in m"
          },
          "characteristic": {
            "type": "string",
            "enum": [
              "satellite",
              "gsm",
              "indirect"
            ],
            "description": "`satellite`: GPS, Galileo, GLONASS etc.\n`indirect`: Bluetooth, Wi-Fi etc."
          }
        },
        "required": [
          "datetime",
          "coordinates"
        ]
      },
      "OTDriver": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ],
            "description": "Driver ID "
          },
          "name": {
            "type": "string",
            "description": "Driver name"
          }
        }
      },
      "OTCoDriver": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ],
            "description": "Co-driver ID"
          },
          "name": {
            "type": "string",
            "maxLength": 150,
            "description": "Co-driver name"
          }
        }
      },
      "OTPassenger": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ],
            "description": "Passenger ID"
          },
          "name": {
            "type": "string",
            "maxLength": 150,
            "description": "Passenger name"
          }
        }
      },
      "OTTemp": {
        "type": "object",
        "properties": {
          "setpoints": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/components/schemas/OTDataStatus"
                }
              ],
              "properties": {
                "value": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 150
                    },
                    "value": {
                      "type": "number",
                      "format": "float",
                      "description": "in °C"
                    }
                  }
                }
              }
            }
          },
          "temperatures": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/components/schemas/OTDataStatus"
                }
              ],
              "properties": {
                "value": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 150
                    },
                    "value": {
                      "type": "number",
                      "format": "float",
                      "description": "in °C"
                    },
                    "alert": {
                      "type": "boolean",
                      "description": "alert condition set"
                    }
                  }
                }
              }
            }
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/components/schemas/OTDataStatus"
                }
              ],
              "properties": {
                "value": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 150
                    },
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "OTAddress": {
        "type": "object",
        "properties": {
          "coordinates": {
            "$ref": "#/components/schemas/OTCoordinates"
          },
          "addresstype": {
            "type": "string",
            "enum": [
              "customer",
              "personal",
              "invoice",
              "shipper",
              "consignee",
              "shippingPartner",
              "receivingPartner",
              "forwarder",
              "service"
            ],
            "description": "Type to distinguish between different types of addresses, so that\nyou can have several addresses in one list"
          },
          "name": {
            "type": "string"
          },
          "companyname": {
            "type": "string"
          },
          "street": {
            "type": "string",
            "description": "Street name and possibly number"
          },
          "addition": {
            "type": "string",
            "description": "Further address information or additional details"
          },
          "province": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zipcode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "countrycode": {
            "type": "string",
            "minLength": 3,
            "maxLength": 3,
            "pattern": "^[A-Z]{3}$",
            "description": "ISO-3166 ALPHA-3"
          },
          "contact": {
            "$ref": "#/components/schemas/OTContact"
          },
          "poiname": {
            "type": "string",
            "maxLength": 30
          },
          "poigroup": {
            "type": "string",
            "maxLength": 30
          }
        }
      },
      "OTAvis": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Hr Max Muster"
          },
          "phone": {
            "type": "string",
            "example": "+41793332211"
          },
          "ismandatory": {
            "type": "boolean",
            "description": "Indicates if it is mandatory to notify",
            "example": true
          }
        }
      },
      "OTContact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "maxLength": 30
          },
          "fax": {
            "type": "string",
            "maxLength": 30
          },
          "mobile": {
            "type": "string",
            "maxLength": 30
          },
          "email": {
            "type": "string",
            "maxLength": 50
          }
        }
      },
      "OTCanData": {
        "type": "object",
        "properties": {
          "caninstant": {
            "type": "object",
            "properties": {
              "speed": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "number",
                    "format": "float",
                    "default": 0,
                    "description": "Speed in km/h"
                  }
                }
              },
              "rpm": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "description": "Rotational speed of engine in rpm"
                  }
                }
              },
              "fuelconsmpt": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "number",
                    "format": "float",
                    "default": 0,
                    "minimum": 0,
                    "description": "Fuel consumption in l/h"
                  }
                }
              },
              "fuellevel": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32",
                      "default": 0,
                      "minimum": 0,
                      "maximum": 100,
                      "description": "Fuel level primary, secondary, ... tank in %"
                    }
                  }
                }
              },
              "axelweight": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32",
                      "default": 0,
                      "minimum": 0
                    },
                    "description": "Axel 1,2,... Weight in kg"
                  }
                }
              },
              "turbopressure": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Turbo pressure in kPa"
                  }
                }
              },
              "coolanttemp": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "number",
                    "format": "float",
                    "default": 0,
                    "description": "Coolant temperature in °C"
                  }
                }
              },
              "acceleratorpdl": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 100,
                    "description": "Accelerator pedal in %"
                  }
                }
              },
              "torque": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 250,
                    "description": "Torque in %"
                  }
                }
              },
              "battvolt": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "number",
                    "format": "float",
                    "default": 0,
                    "description": "Battery voltage in V"
                  }
                }
              },
              "coolantlvl": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 100,
                    "description": "Coolant level in %"
                  }
                }
              },
              "oiltemp": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "number",
                    "format": "float",
                    "default": 0,
                    "description": "Oil temperature in °C"
                  }
                }
              },
              "oillvl": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 100,
                    "description": "Oil level in %"
                  }
                }
              },
              "throttle": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 100,
                    "description": "Throttle position in %"
                  }
                }
              },
              "airinltpres": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Air inlet pressure in kPa"
                  }
                }
              },
              "gear": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "description": "0=neutral / 45(-)=reverse / 43(+)=forward / 127 = parked"
                  }
                }
              },
              "seatbelt": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "string",
                    "enum": [
                      "off",
                      "on"
                    ],
                    "default": "off"
                  }
                }
              },
              "oilpressure": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Engine oil pressure in kPa"
                  }
                }
              },
              "wettankpressure": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Wet tank air pressure in kPa"
                  }
                }
              },
              "pto": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "string",
                    "enum": [
                      "none",
                      "atLeastOne"
                    ],
                    "default": "none"
                  }
                }
              },
              "ignswtch": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "string",
                    "enum": [
                      "off",
                      "on"
                    ],
                    "default": "off"
                  }
                }
              }
            }
          },
          "cantotal": {
            "type": "object",
            "properties": {
              "mileage": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Mileage in km"
                  }
                }
              },
              "totalfuel": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Total fuel in liter"
                  }
                }
              },
              "fuelusedatcruise": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "number",
                    "format": "float",
                    "default": 0,
                    "minimum": 0,
                    "description": "Fuel used at cruise in liter"
                  }
                }
              },
              "fuelusedatdrive": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "number",
                    "format": "float",
                    "default": 0,
                    "minimum": 0,
                    "description": "Fuel used at drive in liter"
                  }
                }
              },
              "idlelonger5": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Number of idle longer than 5 min"
                  }
                }
              },
              "idlelonger10": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Number of idle longer than 10 min"
                  }
                }
              },
              "totalidletime": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Total idle time in sec"
                  }
                }
              },
              "totaltimepto": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Total pto time in sec"
                  }
                }
              },
              "timecruise": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Cruise time in sec."
                  }
                }
              },
              "rpmthreshold": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32",
                      "default": 0,
                      "minimum": 0
                    },
                    "description": "Rpm > treshold 1,2,3 sec."
                  }
                }
              },
              "speedthreshold": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32",
                      "default": 0,
                      "minimum": 0
                    },
                    "description": "Speed > threshold speed 1,2,3 sec."
                  }
                }
              },
              "brakeapplications": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Number of brake applications"
                  }
                }
              },
              "clutchapplications": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Number of clutch applications"
                  }
                }
              },
              "engineon": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Time engine is on in sec"
                  }
                }
              },
              "timetorque90": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Time torque > 90%  in sec"
                  }
                }
              },
              "fuelrateavg": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "number",
                    "format": "float",
                    "default": 0,
                    "minimum": 0,
                    "description": "Fuel rate average in l/h"
                  }
                }
              },
              "totaldistancecruisecontrol": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Total vehicle distance with cruise control"
                  }
                }
              },
              "totalfuelconsumptionwithpto": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTDataStatus"
                  }
                ],
                "properties": {
                  "value": {
                    "type": "integer",
                    "format": "int32",
                    "default": 0,
                    "minimum": 0,
                    "description": "Total fuel consumption with pto"
                  }
                }
              }
            }
          }
        }
      },
      "OTTacho": {
        "type": "object",
        "description": "`workingstate`, `timerelstate`, `cardpresent`, `overspeed`,\n`systemevent`, `direction` and `speed` are described and specified as in\nSAE J 1939",
        "properties": {
          "workstate": {
            "type": "object",
            "properties": {
              "driver1": {
                "type": "string",
                "enum": [
                  "rest",
                  "available",
                  "work",
                  "drive",
                  "error",
                  "n/a"
                ]
              },
              "driver2": {
                "type": "string",
                "enum": [
                  "rest",
                  "available",
                  "work",
                  "drive",
                  "error",
                  "n/a"
                ]
              }
            },
            "description": "State of work of the drivers"
          },
          "timerelstate": {
            "type": "object",
            "properties": {
              "driver1": {
                "type": "integer",
                "format": "int32",
                "minimum": 0
              },
              "driver2": {
                "type": "integer",
                "format": "int32",
                "minimum": 0
              }
            },
            "description": "Indicates if the driver approaches or exceeds working time limits\n0=normal / 1=15 min. bef. 4 1/2h / 2=4 1/2h reached / 3=15 min bef. 9h / 4=9h reached / 5=15min bef. 16h / 6=16h reached / 14=Error / 15=n/a"
          },
          "cardpresent": {
            "type": "object",
            "properties": {
              "driver1": {
                "type": "boolean"
              },
              "driver2": {
                "type": "boolean"
              }
            },
            "description": "Indicates the presence of a driver card"
          },
          "overspeed": {
            "type": "boolean",
            "description": "Indicates whether the vehicle is exceeding the legal speed limit set\nin the tachograph"
          },
          "systemevent": {
            "type": "boolean",
            "description": "Indicates that a tachograph event has occurred. This may include\npower supply interruption, interruption of the speed sensor,\nincorrect data on the driver card, driving without a driver card,\nillegal removal of a driver card, insertion of a driver card during\ndriving, and time adjustment"
          },
          "direction": {
            "type": "string",
            "enum": [
              "forward",
              "reverse"
            ],
            "description": "Indicates the direction of the vehicle"
          },
          "speed": {
            "type": "number",
            "format": "float",
            "description": " Speed of the vehicle registered by the tachograph"
          },
          "cardid": {
            "type": "object",
            "properties": {
              "driver1": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTIDType"
                  }
                ],
                "description": "Card ID of driver 1"
              },
              "driver2": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OTIDType"
                  }
                ],
                "description": "Card ID of driver 2"
              }
            },
            "description": "Driver card IDs"
          },
          "rpm": {
            "type": "integer",
            "format": "int32",
            "description": "Output shaft speed  rpm"
          }
        }
      },
      "OTDiag": {
        "type": "object",
        "properties": {
          "dtcstatus": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/OTDataStatus"
              }
            ],
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "off",
                  "on"
                ],
                "description": "Generic malfunction indicator light"
              }
            }
          },
          "dtcred": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/OTDataStatus"
              }
            ],
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "off",
                  "on"
                ],
                "description": "Red malfunction indicator light"
              }
            }
          },
          "dtcamber": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/OTDataStatus"
              }
            ],
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "off",
                  "on"
                ],
                "description": "Amber malfunction indicator light"
              }
            }
          },
          "dtcprotect": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/OTDataStatus"
              }
            ],
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "off",
                  "on"
                ],
                "description": "Protection malfunction indicator light"
              }
            }
          },
          "handbreak": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/OTDataStatus"
              }
            ],
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "off",
                  "on"
                ],
                "description": "Handbrake malfunction indicator light"
              }
            }
          },
          "batterystatus": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/OTDataStatus"
              }
            ],
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "ok",
                  "failure"
                ]
              }
            }
          },
          "coolantstatus": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/OTDataStatus"
              }
            ],
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "ok",
                  "failure"
                ]
              }
            }
          },
          "oilpressure": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/OTDataStatus"
              }
            ],
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "ok",
                  "failure"
                ]
              }
            }
          },
          "breakpads": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "$ref": "#/components/schemas/OTDataStatus"
                }
              ],
              "properties": {
                "value": {
                  "$ref": "#/components/schemas/OTBreakpad"
                }
              }
            }
          },
          "oillevelstatus": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/OTDataStatus"
              }
            ],
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "ok",
                  "failure"
                ]
              }
            }
          },
          "absstatus": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/OTDataStatus"
              }
            ],
            "properties": {
              "value": {
                "type": "string",
                "enum": [
                  "fullyOperational",
                  "notFullyOperational"
                ]
              }
            }
          }
        }
      },
      "OTDriverbehavior": {
        "type": "object",
        "properties": {
          "harshbreak": {
            "type": "integer",
            "format": "int32",
            "description": "Total harsh brakes times"
          },
          "harshacc": {
            "type": "integer",
            "format": "int32",
            "description": "Total harsh accelerations times"
          },
          "idletime": {
            "type": "integer",
            "format": "int32",
            "description": "Total idle time sec."
          },
          "coastingtime": {
            "type": "integer",
            "format": "int32",
            "description": "Total coasting time sec."
          },
          "coastingdistance": {
            "type": "number",
            "format": "float",
            "description": "Total coasting distance km"
          },
          "accelerationtime": {
            "type": "integer",
            "format": "int32",
            "description": "Total acceleration time sec."
          },
          "accelerationdistance": {
            "type": "number",
            "format": "float",
            "description": "Total acceleration distance km"
          },
          "decelerationtime": {
            "type": "integer",
            "format": "int32",
            "description": "Total deceleration time sec."
          },
          "decelerationdistance": {
            "type": "number",
            "format": "float",
            "description": "Total deceleration distance km"
          },
          "overspeedtime": {
            "type": "integer",
            "format": "int32",
            "description": "Total overspeed time sec."
          },
          "overspeeddistance": {
            "type": "number",
            "format": "float",
            "description": "Total overspeed distance km"
          },
          "rpmtime": {
            "type": "integer",
            "format": "int32",
            "description": "Total over RPM time sec."
          },
          "rpmdistance": {
            "type": "number",
            "format": "float",
            "description": "Total over RPM distance km"
          },
          "cruisabletime": {
            "type": "integer",
            "format": "int32",
            "description": "Total cruisable time sec."
          },
          "cruisabledistance": {
            "type": "number",
            "format": "float",
            "description": "Total cruisable distance km"
          },
          "cruisetime": {
            "type": "integer",
            "format": "int32",
            "description": "Total cruise time sec."
          },
          "cruisedistance": {
            "type": "number",
            "format": "float",
            "description": "Total cruise distance in km"
          },
          "cruisetime2": {
            "type": "integer",
            "format": "int32",
            "description": "Total cruise time w/o acceleration pedal in sec."
          },
          "cruisedistance2": {
            "type": "number",
            "format": "float",
            "description": "Total cruise distance w/o acceleration pedal in km"
          }
        }
      },
      "OTBreakpad": {
        "type": "object",
        "properties": {
          "axel": {
            "type": "integer",
            "minimum": 0,
            "description": "axle number front to back beginning with 0"
          },
          "wheel": {
            "type": "string",
            "enum": [
              "left",
              "right"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ok",
              "maladjusted",
              "delayedReturn",
              "delayedBreaking",
              "outworn",
              "error",
              "n/a"
            ]
          }
        }
      },
      "OTTour": {
        "type": "object",
        "description": "Contains all static information about a tour. It consists of a number of\n`drives`. For complex tours there are optional structures that contain\ndata about `shipments`, `items`, `tasks` and dangerous goods.",
        "properties": {
          "tourid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ]
          },
          "cid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cid"
              }
            ]
          },
          "refid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refid"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "info": {
            "type": "string"
          },
          "did": {
            "allOf": [
              {
                "$ref": "#/components/schemas/did"
              }
            ]
          },
          "vid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/vid"
              }
            ]
          },
          "refdid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refdid"
              }
            ]
          },
          "refvid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refvid"
              }
            ]
          },
          "drives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OTDrive"
            }
          }
        },
        "required": [
          "refid",
          "name",
          "refdid"
        ]
      },
      "OTEta": {
        "properties": {
          "timestamp": {
            "$ref": "#/components/schemas/OTTimestamp"
          },
          "driveid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ]
          },
          "eta": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-22T17:32:28.000Z",
            "description": "Estimated time of arrival"
          },
          "timewindow": {
            "$ref": "#/components/schemas/OTTimeWindow"
          }
        }
      },
      "OTDrive": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ]
          },
          "refid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refid"
              }
            ]
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTAddress"
              }
            ],
            "description": "Destination address"
          },
          "info": {
            "type": "string",
            "description": "Further information"
          },
          "name": {
            "type": "string"
          },
          "starttimewindow": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTTimeWindow"
              }
            ],
            "description": "Earliest and latest start time"
          },
          "arrivaltimewindow": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTTimeWindow"
              }
            ],
            "description": "Earliest and latest arrival time"
          },
          "avis": {
            "$ref": "#/components/schemas/OTAvis"
          },
          "drivenumber": {
            "type": "integer",
            "format": "int32",
            "description": "Indicates the position of the drive in a tour"
          },
          "adrtotals": {
            "type": "object",
            "description": "Summarized information about the dangerous goods that are present\nduring the drive. May be different for each drive.",
            "properties": {
              "points": {
                "type": "integer",
                "format": "int32",
                "example": 1650
              },
              "tunnelcode": {
                "type": "string",
                "example": "E"
              }
            }
          },
          "tasks": {
            "type": "array",
            "description": "List of tasks for the stop of the current drive",
            "items": {
              "$ref": "#/components/schemas/OTTask"
            }
          }
        },
        "required": [
          "refid",
          "address",
          "name"
        ]
      },
      "OTEventMeta": {
        "properties": {
          "eventid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ]
          },
          "timestamp": {
            "$ref": "#/components/schemas/OTTimestamp"
          },
          "coordinates": {
            "$ref": "#/components/schemas/OTCoordinates"
          }
        }
      },
      "OTTourEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OTEventMeta"
          }
        ],
        "properties": {
          "tourid": {
            "description": "ID of the associated tour",
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ]
          },
          "event": {
            "type": "string",
            "enum": [
              "available/created",
              "transmitted",
              "read",
              "excepted",
              "started",
              "canceled",
              "deleted",
              "finished",
              "denied"
            ],
            "description": "'available/created': Telematic -> TMS, tour fertig vorliegend"
          },
          "additions": {
            "$ref": "#/components/schemas/OTKeyValueList"
          }
        }
      },
      "OTDriveEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OTEventMeta"
          }
        ],
        "properties": {
          "driveid": {
            "description": "ID of the associated drive",
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ]
          },
          "tourid": {
            "description": "ID of the associated tour",
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ]
          },
          "event": {
            "type": "string",
            "enum": [
              "started",
              "paused",
              "interrupted",
              "canceled",
              "deleted",
              "arrived",
              "finished"
            ]
          },
          "additions": {
            "$ref": "#/components/schemas/OTKeyValueList"
          }
        }
      },
      "OTTaskEvent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OTEventMeta"
          }
        ],
        "properties": {
          "taskid": {
            "description": "ID of the associated task",
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ]
          },
          "tourid": {
            "description": "ID of the associated tour",
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ]
          },
          "event": {
            "description": "Type of the event. If you just want to transmit information during a\ntask, use the enum 'info'",
            "type": "string",
            "enum": [
              "started",
              "canceled",
              "finished",
              "deleted",
              "info"
            ]
          },
          "shipment": {
            "type": "object",
            "description": "Information about the associated shipment",
            "properties": {
              "status": {
                "type": "string"
              },
              "additions": {
                "$ref": "#/components/schemas/OTKeyValueList"
              }
            }
          },
          "items": {
            "description": "Information about single items.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "itemid": {
                  "$ref": "#/components/schemas/OTIDType"
                },
                "status": {
                  "description": "Information about the status of an item e.g. the condition at\ndelivery",
                  "type": "string"
                },
                "additions": {
                  "$ref": "#/components/schemas/OTKeyValueList"
                }
              }
            }
          },
          "additions": {
            "$ref": "#/components/schemas/OTKeyValueList"
          }
        }
      },
      "OTShipment": {
        "type": "object",
        "properties": {
          "shipmentid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ]
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OTAddress"
            },
            "description": "All addresses relevant for the shipment"
          },
          "items": {
            "type": "array",
            "description": "List of all single items of the shipment",
            "items": {
              "$ref": "#/components/schemas/OTItem"
            }
          }
        }
      },
      "OTItem": {
        "type": "object",
        "description": "",
        "properties": {
          "itemid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ]
          },
          "parentid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ],
            "description": "Item ID of the package the item is part of (e.g. the ID of the\npalette to which the item belongs). With the `parentid` you are able\nto map any tree structure in the item list."
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "unit": {
            "type": "string",
            "example": "PAL"
          },
          "description": {
            "type": "string",
            "example": "Deuteriumfläschchen"
          },
          "codes": {
            "type": "array",
            "description": "List of codes on the item, e.g. barcodes",
            "items": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string"
                },
                "scanpossible": {
                  "type": "boolean",
                  "description": "If the code is scannable"
                },
                "type": {
                  "type": "string",
                  "example": "QRCode",
                  "description": "Type to distinguish between different types of codes"
                }
              }
            }
          },
          "scanrequired": {
            "type": "boolean",
            "description": "Indicates if the item must be scanned"
          },
          "dimension": {
            "type": "object",
            "properties": {
              "height": {
                "type": "number",
                "multipleOf": 0.1,
                "description": "Height in cm",
                "example": 30
              },
              "width": {
                "type": "number",
                "multipleOf": 0.1,
                "description": "Width in cm",
                "example": 80
              },
              "length": {
                "type": "number",
                "multipleOf": 0.1,
                "description": "Length in cm",
                "example": 120
              },
              "weight": {
                "type": "number",
                "multipleOf": 0.1,
                "description": "Weight in kg",
                "example": 566
              },
              "area": {
                "type": "number",
                "multipleOf": 0.1,
                "description": "Area in m2",
                "example": 0.96
              },
              "volume": {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.1,
                "example": 0.288
              },
              "cargospace": {
                "type": "number",
                "format": "decimal",
                "multipleOf": 0.1,
                "example": 1.5
              }
            }
          },
          "adrinfo": {
            "type": "object",
            "description": "Information on classification according to the 'Agreement concerning\nthe International Carriage of Dangerous Goods by Road' (ADR).\nSummarized information on the dangerous goods present on each drive\ncan be found in `OTDrive`",
            "properties": {
              "points": {
                "type": "integer",
                "format": "int32",
                "example": 1650
              },
              "amount": {
                "type": "integer",
                "format": "int32",
                "example": 500
              },
              "unit": {
                "type": "string",
                "example": "l",
                "enum": [
                  "l",
                  "kg"
                ]
              },
              "UNNR": {
                "type": "string",
                "example": "1905"
              },
              "properShippingName": {
                "type": "string"
              },
              "additionalDescription": {
                "type": "string"
              },
              "classNumber": {
                "type": "string",
                "example": "4.2"
              },
              "className": {
                "type": "string",
                "example": "flammable liquids"
              },
              "packingGroup": {
                "type": "string",
                "example": "II"
              },
              "classificationCode": {
                "type": "string",
                "example": "F1"
              },
              "tunnelRestrictionCode": {
                "type": "string",
                "example": "E"
              },
              "isEnvironmentallyHazardous": {
                "type": "boolean",
                "example": false
              },
              "isHighRisk": {
                "type": "boolean",
                "example": true
              }
            }
          }
        }
      },
      "OTTask": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string"
          },
          "shipmentid": {
            "description": "The UUID of the shipment the task refers to",
            "type": "string"
          },
          "tasktype": {
            "type": "string",
            "description": "Custom designation for task type"
          },
          "address": {
            "$ref": "#/components/schemas/OTAddress"
          },
          "timewindow": {
            "$ref": "#/components/schemas/OTTimeWindow"
          },
          "description": {
            "type": "string"
          },
          "additions": {
            "$ref": "#/components/schemas/OTKeyValueList"
          }
        }
      },
      "OTKeyValueList": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string",
              "description": ""
            },
            "value": {
              "type": "string"
            }
          }
        }
      },
      "OTTimeWindow": {
        "type": "object",
        "properties": {
          "earliest": {
            "type": "string",
            "format": "date-time",
            "example": "2020-01-01T09:28:00.000Z"
          },
          "latest": {
            "type": "string",
            "format": "date-time",
            "example": "2020-01-01T10:00:00.000Z"
          }
        }
      },
      "OTMessageStatus": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "serverReceived",
              "deviceReceived",
              "read",
              "delete"
            ]
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "example": "2017-07-22T17:32:28.000Z"
          }
        }
      },
      "OTMessage": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/OTMessageBase"
          }
        ],
        "properties": {
          "direction": {
            "type": "string",
            "enum": [
              "serverToDevice",
              "deviceToServer"
            ]
          },
          "status": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OTMessageStatus"
            }
          }
        }
      },
      "OTMessageBase": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ]
          },
          "refid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refid"
              }
            ]
          },
          "did": {
            "allOf": [
              {
                "$ref": "#/components/schemas/did"
              }
            ]
          },
          "refdid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refdid"
              }
            ]
          },
          "uid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ],
            "maxLength": 150,
            "description": "Unique user id"
          },
          "username": {
            "type": "string",
            "maxLength": 150
          },
          "message": {
            "type": "string",
            "description": "context"
          }
        },
        "required": [
          "refid",
          "refdid",
          "message"
        ]
      },
      "OTSetStatus": {
        "type": "object",
        "properties": {
          "refid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refid"
              }
            ]
          },
          "refdid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/refdid"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/OTMessageStatus"
          }
        },
        "required": [
          "refid",
          "refdid",
          "status"
        ]
      },
      "OTLog": {
        "type": "object",
        "properties": {
          "loglevel": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 7,
            "description": "From 0 (most important) to 7 (least important):\n0=Emergency, 1=Alert, 2=Critical, 3=Error, 4=Warning, 5=Notice, 6=Informational, 7=Debug"
          },
          "call": {
            "type": "string",
            "description": "Which call (protocol)"
          },
          "username": {
            "type": "string",
            "description": "Which user account was it"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "Date Time of message receive",
            "example": "2017-07-21T17:32:28.000Z"
          },
          "message": {
            "type": "string",
            "description": "Log message"
          }
        }
      },
      "OTTransferContainer": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "description": "Filename",
            "example": "123456789.DDD"
          },
          "id": {
            "type": "string",
            "description": "Vehicle or driver ID",
            "example": "example: DF00000000000000"
          },
          "class": {
            "type": "string",
            "enum": [
              "driver",
              "vehicle",
              "all"
            ],
            "example": "driver"
          },
          "used_company_card": {
            "type": "string",
            "description": "the company card which was used",
            "example": "DU000000000000"
          },
          "type": {
            "type": "string",
            "enum": [
              "ddd",
              "dlc",
              "tgd",
              "c1b_v1b"
            ],
            "example": 0
          },
          "data": {
            "type": "string",
            "description": "container data bytes encoded in Base64",
            "example": "5MCMfOGVgyZPnyxamDRjA0EAwX1BBPOQA..."
          }
        }
      },
      "OTDriverCard": {
        "type": "object",
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OTIDType"
              }
            ],
            "maxLength": 50,
            "description": "Unique object ID",
            "example": "4025"
          },
          "surname": {
            "type": "string",
            "example": "Mustermann"
          },
          "first_given_name": {
            "type": "string",
            "example": "Max"
          },
          "issue_date": {
            "type": "object",
            "properties": {
              "valid_from": {
                "type": "string",
                "format": "date",
                "example": "2017-07-21T00:00:00.000Z"
              },
              "valid_to": {
                "type": "string",
                "format": "date",
                "example": "2017-07-21T00:00:00.000Z"
              }
            }
          },
          "name_of_the_issuing_authority": {
            "type": "string"
          },
          "driver_license_number": {
            "type": "string",
            "example": "A1234567890"
          },
          "card_number": {
            "type": "string",
            "example": "DF00003563691000"
          }
        }
      },
      "OTIDType": {
        "type": "string"
      },
      "OTDataStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ok",
              "error",
              "n/a"
            ],
            "description": "Indicates availability of data"
          }
        }
      },
      "OTCoordinates": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "WGS84 latitude"
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "WGS84 longitude"
          }
        }
      },
      "OTTimestamp": {
        "type": "string",
        "format": "date-time",
        "description": "Creation time of the data set"
      },
      "did": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OTIDType"
          },
          {
            "description": "Device ID"
          }
        ]
      },
      "vid": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OTIDType"
          },
          {
            "description": "Vehicle ID"
          }
        ]
      },
      "cid": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OTIDType"
          },
          {
            "description": "Customer ID"
          }
        ]
      },
      "gid": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OTIDType"
          },
          {
            "description": "Vehicle Group ID"
          }
        ]
      },
      "refdid": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OTIDType"
          },
          {
            "description": "Reference Device ID"
          }
        ]
      },
      "refvid": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OTIDType"
          },
          {
            "description": "Reference Vehicle ID"
          }
        ]
      },
      "refid": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OTIDType"
          },
          {
            "description": "Reference ID"
          }
        ]
      },
      "dataid": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OTIDType"
          },
          {
            "description": "Data ID"
          }
        ]
      }
    }
  }
}